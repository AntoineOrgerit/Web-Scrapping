<p> var js="0.0"; </p>
<p> js="1.0"; </p>
<p> js="1.1"; </p>
<p> js="1.2"; </p>
<p> js="1.3"; </p>
<p> js="1.4"; </p>
<p> js="1.5"; </p>
<p> js="1.6"; </p>
<p> js="1.7"; </p>
<p> js="1.8"; </p>
<p> js="1.9"; </p>
<p> <!--  var bb=new Image();var _ti=910;var _q="";var na=(navigator.appName=="Netscape");var ns=(navigator.appName.substring(0,9)=="Microsoft");var _qDate=new Date();var _r=(document.referrer.indexOf(getdomain(location))>-1?"":document.referrer);_q+="&5="+parseInt(_qDate.getTimezoneOffset());_q+="&35="+parseInt(_qDate.toString().indexOf("aylight")>-1?1:0);_q+="&6=137437868";_q+="&7=21357";_q+="&8="+encodeURIComponent(document.location);_q+="&9="+encodeURIComponent(_r);_q+="&10="+encodeURIComponent(document.title);_q+="&11="+encodeURIComponent(navigator.userAgent);_q+="&12="+encodeURIComponent((na?navigator.language:navigator.userLanguage));_q+="&13="+((navigator.javaEnabled()?'1':'0'));_q+="&14="+encodeURIComponent(js);if(document.cookie.indexOf("cc")==-1)document.cookie="cc=t;";_q+="&15="+((document.cookie.indexOf("cc")==-1)?"0":"1");_q+="&16="+encodeURIComponent((screen.width+'x'+screen.height));_q+="&17="+encodeURIComponent(((ns)?screen.colorDepth:screen.pixelDepth));_q+="&18="+encodeURIComponent(Math.random());_q+="&19="+_ti;bb.src="http://s.clickability.com/s?"+_q; function setonclicks(a,b){var i=0;var retval=true;while(document.links[i]!=a){i++;}if(b.li[i])retval=b.li[i].oldonclick();bye(a);return retval;} function newonld(){if(hasonload)oldonld();lnks=new Object();var sze=document.links.length;lnks.li=new Array(sze);for (var i=0; i<sze; i++){if(document.links[i].onclick){lnks.li[i]=document.links[i];lnks.li[i].oldonclick=document.links[i].onclick;}eval("document.links[i].onclick=function(){return setonclicks(this,lnks);}");}}function bye(a){if(a.href.toLowerCase().indexOf('http')!=0)return true;if(getdomain(location)==getdomain(a))return true;if(a.href.toLowerCase().indexOf('http')!=0)return true;var _qc="http://s.clickability.com/s?19=912";_qc+="&6=137437868";_qc+="&7=21357";_qc+="&18="+encodeURIComponent(Math.random());_qc+="&100="+a.href;_qc+="&101="+encodeURIComponent(a.text);var cc=new Image();if(na){cc.src=_qc;pc(100);}else cc.src=_qc;return true;}function pc(a){d = new Date(); while (1){m =new Date(); df = m-d;if( df > a ) {break;}}}function getdomain(a){var i=a.host.indexOf(":");return (i>=0)?a.host.substring(0,i):a.host;}if(self['setupalready']){var dosetup = false;alert('There are two $imware.tracker calls on this page. Please alert Client Services');}else{var dosetup = true;var hasonload=false;}if(dosetup && ((window.screen)||((new Array()).toSource)||((new Array()).shift&&ns))&&(navigator.userAgent.indexOf('Mac')<0)){if(window.onload){oldonld=window.onload;hasonload=true;}window.onload=newonld;var setupalready = true;}//--> </p>
<p> H1N1 Case Reported In Wichita </p>
<p> <!--  // Cookie functions  var expDays = 1000; var exp = new Date();  exp.setTime(exp.getTime() + (expDays*24*60*60*1000));  function GetCookie (name) {       var arg = name + "=";       var alen = arg.length;       var clen = document.cookie.length;       var i = 0;       while (i < clen) {             var j = i + alen;             if (document.cookie.substring(i, j) == arg)               return getCookieVal (j);             i = document.cookie.indexOf(" ", i) + 1;             if (i == 0) break;        }   } function getCookieVal (offset) {       var endstr = document.cookie.indexOf (";", offset);       if (endstr == -1)         endstr = document.cookie.length;       return unescape(document.cookie.substring(offset, endstr)); }  function SetCookieDefaultExpire (name, value,domain) {       document.cookie = name + "=" + escape (value) + "; expires=" + exp.toGMTString() +     ("; domain="+domain); } function SetCookie (name, value,domain,expHours) {   	var cookieExp = new Date(); 	cookieExp.setTime(cookieExp.getTime() + (expHours*60*60*1000));     document.cookie = name + "=" + escape (value) + "; expires=" + cookieExp.toGMTString() +     ("; domain="+domain); }  function DeleteCookie (name,domain) {       var now= new Date();       now.setTime (exp.getTime() - 1);       var cval = GetCookie (name);       document.cookie = name + "=; expires=" + now.toGMTString()+     ("; domain="+domain); }  function addToCookie(name, value,domain){ 	var oldValue = GetCookie(name); 	if(oldValue){ 		value = oldValue +'|'+value; 	} 	//alert(value) 	SetCookieDefaultExpire(name, value,domain); } function getCookieValues(name){ 	var values = GetCookie(name); 	//alert(values) 	if(values){ 		var valueArray = new Array(); 		var i = 0; 		var valueNum = 0; 		var lastindex = 0; 		while(i>-1){ 			i = values.indexOf("|", lastindex) 			//alert(i); 			//alert(lastindex); 			//alert(valueNum); 			if(i == -1){ 				valueArray[valueNum] = values.substring(lastindex); 			}else{ 				valueArray[valueNum] = values.substring(lastindex,i); 			} 			//alert(valueArray[valueNum]); 			valueNum = valueNum  + 1; 			lastindex = i + 1; 			if(valueNum == 100) break; 		} 		return valueArray; 	} 	 }  function removeCookieValue(name, value,domain){ 	var favorites = getCookieValues(name); 	var newvalue = ""; 	for(var i= 0; i<favorites.length;i++){ 		var fav = favorites[i]; 		if(fav != value){ 			if(i > 0 &&  newvalue != ''){ newvalue = newvalue + "|";} 			newvalue = newvalue + fav; 		} 	} 	SetCookieDefaultExpire(name, newvalue,domain); }   function setFavorite(value, domain){ 	var fav = value; 	var len = fav.length; 	//alert(city); 	if(fav.indexOf("http://") == 0){ 		fav = fav.substring(7,len); 	} 	if(fav.indexOf("https://") == 0){ 		fav = fav.substring(8,len); 	}  	addToCookie("favorites",fav,domain); } --> </p>
<p> function apvDwd(pid,title,pl,t) { if(!pl) {pl='';} var w = window.open("http://video.ap.org/vws/search/aspx/ap.aspx?f="+pid+"&g="+title+"&p="+pl+"&t="+t,"apvDwd","width=788,height=598,status=1,scrollbars=1,resizable=1"); } </p>
<p> function displayVideoHelp(){var videohelppage = window.open('http://www.kake.com/unclassified/769277.html', 'CONTENT');} 	function playVideoClip ()     {displayVideoHelp();} 	function playVideoClips ()    {displayVideoHelp();}  	function checkLaunchVideo() {} </p>
<p> //Objects to interact with server 	var CMSUtil = { 		interactWithServer: function(form, isAjax, buildObjectFunction,  									returnFunction, action, servlet,  									extraFields){ 			if(isAjax == true && returnFunction != null){             	var queryString = this.serializeForm(form); 				if(queryString != null){ 					if(action != null){ 						queryString += "&action=" + action + "&isAjax=Y";	 					}else{             			queryString += "&isAjax=Y";             		}             		if(extraFields){             			queryString += extraFields;             		}             		             		var req = this.getXmlRequestObject(); 					if(req != null) {             			var handlerFunction = this.getReadyStateHandler(req, returnFunction, buildObjectFunction); 						req.onreadystatechange = handlerFunction; 						req.open("POST", servlet, true);             			req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");             			req.send(queryString);             			return false; 					} 				}             }else{  				this.submitUserFormNoAJAX(form, action, servlet);  			} 		}, 		 		getXmlRequestObject: function() { 			var req; 			if(window.XMLHttpRequest){ 				req = new XMLHttpRequest(); 			}else if(window.ActiveXObject){ 				try{ 					req = new ActiveXObject("Msxml2.XMLHTTP"); 				}catch(e){ 					try{ 						req = new ActiveXObject("Microsoft.XMLHTTP"); 					}catch(e){                			return null;                		} 				} 			}     		return req; 		}, 		 		getReadyStateHandler: function(req, returnFunction, buildObjectFunction) {  			return function () {  		    	// If the request's status is "complete"     			if (req.readyState == 4) {              				// Check that a successful server response was received    		   			if (req.status == 200) {          				// Pass the XML payload of the response to the          				// handler function         				var response = "(" + req.responseText + ")";             			response = eval(response); 						buildObjectFunction(response);	             			returnFunction(response);  					} else { 						// An HTTP problem has occurred         				alert("HTTP error: "+req.status);       				}     			}   			} 		}, 		 		serializeForm: function(form){ 			var paramString = ""; 			var ampRegex = new RegExp("&", "g"); 	  		var replaceAmpStr = escape("&#38;"); 	  		var percentRegex = new RegExp("%", "g");  	   		var replacePerStr = escape("&#37;");         		for(var i = 0;i < form.elements.length;i++){        			var field = form.elements[i];        			if(field.tagName === "TEXTAREA" || (field.tagName === "INPUT" && field.type !== "submit")){        				if(field.type === "checkbox" && !field.checked){        					 continue;        				} 					var fieldValue = field.value; 					fieldValue = fieldValue.replace(percentRegex, replacePerStr); 	       	    	fieldValue = fieldValue.replace(ampRegex, replaceAmpStr);        				paramString += field.name + "=" + fieldValue + "&";            		}        		}  			return paramString; 		}, 		submitUserFormNoAJAX: function(form, action, servlet){ 			if(servlet == null) return null;     	    form.action = servlet;      	    if(action != null) {     	    	var actionField = document.createElement('input');     	    	actionField.setAttribute('name', 'action');   					actionField.setAttribute('type', 'hidden');   					actionField.value = action;     	    	form.appendChild(actionField);     	    	     	    }     		form.submit();     	}     	 	} 	 	var Action = { 		attachAction: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "attachActionAJAX"; 			} else { 				action = "attachAction"; 			} 			CMSUtil.interactWithServer(form, isAjax, Action.buildAction, returnFunction, action, "/s"); 		}, 		 		deleteAction: function(form, isAjax, returnFunction){         	var action = "";         	if(isAjax){         		action = "deleteActionAJAX";         	} else {         		action = "deleteAction";         	}         	CMSUtil.interactWithServer(form, isAjax, Action.deletedAction, returnFunction, action, "/s");         }, 		 		 		buildAction: function(response){ 			if(response.success == true){ 				Action.actionID = response.actionID; 				Action.contentID = response.contentID; 				Action.commentID = response.commentID; 				Action.contentTypeID = response.contentTypeID; 				Action.actionDate = response.actionDate; 				Action.userID = response.userID; 				Action.actionType = response.actionType; 				Action.slugLine = response.slugLine; 			} else { 			 	Action.error = response.error; 			} 		}, 		 		deletedAction: function(response){ 			if(response.success == true){ 				Action.actionID = response.actionID; 			} else { 				Action.error = response.error; 			} 		} 	} 	 	var Ranking = { 		insertRanking: function(form, isAjax, returnFunction){ 			CMSUtil.interactWithServer(form, isAjax, Ranking.buildRanking, returnFunction, "rankComment", "/p"); 		}, 		 		buildRanking: function(response){ 			if(response.success == true){ 				Ranking.success = true; 				Ranking.objectId = response.objectId; 				Ranking.type = response.type; 				Ranking.ipAddress = response.ipAddress; 				Ranking.rankDate = response.rankDate; 				Ranking.upRanking = response.upRanking; 				Ranking.downRanking = response.downRanking; 			} else { 				Ranking.error = response.error; 			} 		} 			 	} 			 	var Rating = { 		addRating: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "addRatingAJAX"; 			} else { 				action = "addRating"; 			}             CMSUtil.interactWithServer(form, isAjax, Rating.buildRating, returnFunction, action, "/s");         },                  insertRating: function(form, isAjax, returnFunction){ 			var extraQueryStr = null; 			if(isAjax){ 				extraQueryStr = getFieldsForForm(); 			}else{ 				addFieldsToForm(form); 			} 			CMSUtil.interactWithServer(form, isAjax, Comment.buildComment, returnFunction, "insertComment", "/c", extraQueryStr); 		},          		buildRating: function(response){ 			if(response.success == true){ 				Rating.id = response.id; 				Rating.rating = response.rating; 				Rating.upvote = response.upvote; 				Rating.downvote = response.downvote; 				Rating.type = response.type; 				Rating.date = response.date; 				Rating.ipAddress = response.ipAddress; 			}else{ 				Rating.error = response.error; 			} 		} 		 	} 	 	var User = { 		createUser: function(form, isAjax, returnFunction){	 		    var action = ""; 			if(isAjax){ 				action = "createProfileAJAX"; 			} else { 				action = "createProfile"; 			}             CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		loginUser: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "doLoginProfileAJAX"; 			} else { 				action = "doLoginProfile"; 			}         	CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		updateUser: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "updateProfileAJAX"; 			} else { 				action = "updateProfile"; 			} 			CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		updateRegistration: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "updateRegistrationAJAX"; 			} else { 				action = "updateReg"; 			} 			CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		updateProfilePassword: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				action = "updateProfilePasswordAJAX"; 			} else { 				action = "updateProfilePassword"; 			} 			CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		insertProfilePic: function(form, isAjax, returnFunction){ 			var action = ""; 			if(isAjax){ 				//not implemented as of yet 				return; 				//action = "updateImageAJAX"; 			} else { 				action = "updateImage"; 			} 			CMSUtil.interactWithServer(form, isAjax, User.buildUser, returnFunction, action, "/s"); 		}, 		 		buildUser: function(response){ 			if(response.success == true){ 				User.ID = response.ID; 				User.username = response.username; 				User.email = response.email; 				User.firstName = response.firstName; 				User.lastName = response.lastName; 				User.birthDate = response.birthDate; 				User.createDate = response.createDate; 				User.title = response.title; 				User.company = response.company; 				User.address1 = response.address1; 				User.address2 = response.address2; 				User.city = response.city; 				User.state = response.state; 				User.zipcode = response.zipcode; 				User.country = response.country; 				User.custom1 = response.custom1; 				User.custom2 = response.custom2; 				User.custom3 = response.custom3; 				User.custom4 = response.custom4; 				User.custom5 = response.custom5; 				User.custom6 = response.custom6; 				User.custom7 = response.custom7; 				User.custom8 = response.custom8; 				User.custom9 = response.custom9; 			}else{ 				User.error = response.error; 				User.errorMsg = response.errorMsg; 				User.errorCode = response.errorCode; 			} 		} 	} 	 	var UserContent = { 		insertContent: function(form, isAjax, returnFunction){ 			var extraQueryStr = null; 			 			if(isAjax){ 				extraQueryStr = getFieldsForForm(); 			}else{ 				addFieldsToForm(form); 			} 			UserContent.messages = null; 			CMSUtil.interactWithServer(form, isAjax, UserContent.buildContent, returnFunction, extraQueryStr, "/d"); 		}, 		 		editContent: function(form, isAjax, returnFunction){ 			CMSUtil.interactWithServer(form, isAjax, UserContent.buildContent, returnFunction, null, "/d"); 		}, 		 		buildContent: function(response){ 			if(response.success == true){ 				for (var i=0; i< response.fields.length; i++){ 					var field = response.fields[i]; 					UserContent[field] = response[field]; 				} 				UserContent.contentID = response.contentID; 				UserContent.contentType = response.contentType; 				UserContent.title = response.title; 				UserContent.status = response.status; 			} else { 				UserContent.error = response.error; 				UserContent.messages = response.messages; 			} 		} 	} 	 	var Comment = { 	 		insertComment: function(form, isAjax, returnFunction){ 			var extraQueryStr = null; 			if(isAjax){ 				extraQueryStr = getFieldsForForm(); 			}else{ 				addFieldsToForm(form); 			} 			CMSUtil.interactWithServer(form, isAjax, Comment.buildComment, returnFunction, "insertComment", "/c", extraQueryStr); 		}, 	 		deleteComment: function(form, isAjax, returnFunction){ 			var extraQueryStr = null; 			if(isAjax){ 				extraQueryStr = getFieldsForForm(); 			}else{ 				addFieldsToForm(form); 			} 			CMSUtil.interactWithServer(form, isAjax, Comment.nullifyComment, returnFunction, "deleteComment", "/c", extraQueryStr); 		}, 		 		updateComment: function(form, isAjax, returnFunction){ 			var extraQueryStr = null; 			if(isAjax){ 				extraQueryStr = getFieldsForForm(); 			} else { 				addFieldsToForm(form); 			} 			CMSUtil.interactWithServer(form, isAjax, Comment.buildComment, returnFunction, "updateComment", "/c", extraQueryStr); 		}, 		 		buildComment: function(response){ 						Comment.name = null; 			Comment.website = null; 			Comment.title = null; 			Comment.comment = null; 			Comment.email = null; 			Comment.rating = null; 			Comment.ratingType = null; 			Comment.commentType = null; 			Comment.flagged = false; 			Comment.isAuthor = false; 			Comment.error = null; 			Comment.status = null; 			Comment.level = 0; 			Comment.parentID = 0; 			Comment.threadID = 0; 			Comment.id = 0; 			Comment.extID = null;		 		 			if(response.success == true){ 				Comment.id = response.id; 				Comment.name = response.name; 				Comment.comment = response.comment; 				Comment.email = response.email; 				Comment.website = response.website; 				Comment.title = response.title; 				Comment.isAuthor = response.isAuthor; 				Comment.flagged = response.flagged; 				Comment.status = response.status; 				Comment.rating = response.rating; 				Comment.ratingType = response.ratingType; 				Comment.commentType = response.commentType; 				if(Comment.status == "AUTHOR"){ 					Comment.isAuthor = true; 				} else if(Comment.status != "APPROVED") { 					Comment.flagged = true; 				} 			    Comment.id = response.id; 			    Comment.threadID = response.threadID; 			    Comment.parentID = response.parentID; 			    Comment.level = response.level; 			    Comment.extID = response.extID; 			} else { 				Comment.error = response.error; 			} 		}, 		 		nullifyComment: function(response){ 			if(response.success == true){ 				Comment.comment = null; 				Comment.email = null; 				Comment.website = null; 				Comment.title = null; 				Comment.isAuthor = null; 				Comment.flagged = null; 				Comment.status = null; 				Comment.id = 0; 			    Comment.threadID = 0; 			    Comment.parentID = 0; 			    Comment.level = 0; 			    Comment.extID = null; 			} else { 				Comment.error = response.error; 			} 		} 	}	 	 	var Clickability = Clickability || {}; 	Clickability.SMTK = { 		kP : 0, 		aT : 0, 		myInterval : null, 		xPos : -1, 		yPos : -1, 		firstX : -1, 		firstY : -1, 		intervals : 0, 		cid :  137437868 , 		did :  21357 , 		d : 0, 		mT : 0 	} 	Clickability.SMTK.myInterval = window.setInterval(timedMousePos,250); 	document.onkeypress = lK; 	window.onload = rAT;  		Clickability.Comment = Comment; 		 		var p; 	var kP = 0; 	var	aT = 0; 	var myInterval = Clickability.SMTK.myInterval; 	var xPos = -1; 	var yPos = -1; 	var firstX = -1; 	var firstY = -1; 	var intervals = 0; 	var d = 0; 	var mT = 0; 	var cid =  137437868 ; 	var did =  21357 ;	 	 	function getMousePos(p) { 		if(!p)var p = window.event; 		if (p.pageX || p.pageY) { 			Clickability.SMTK.xPos = p.pageX; 			Clickability.SMTK.yPos = p.pageY; 		} else if (p.clientX || p.clientY) { 			Clickability.SMTK.xPos = p.clientX + document.body.scrollLeft + document.documentElement.scrollLeft; 			Clickability.SMTK.yPos = p.clientY + document.body.scrollTop + document.documentElement.scrollTop; 		} 	}  	 	function lK() {	 		Clickability.SMTK.kP++; 	}  	function rAT() { 		Clickability.SMTK.aT = new Date(); 	} 		 	function timedMousePos() { 		document.onmousemove = getMousePos; 		if (Clickability.SMTK.xPos >= 0 && Clickability.SMTK.yPos >= 0) { 			var newX = Clickability.SMTK.xPos; 			var newY = Clickability.SMTK.yPos; 			Clickability.SMTK.intervals++; 		} 		if (Clickability.SMTK.intervals == 1) { 			Clickability.SMTK.firstX = Clickability.SMTK.xPos; 			Clickability.SMTK.firstY = Clickability.SMTK.yPos; 		} else if (Clickability.SMTK.intervals == 2) { 			clearInterval(Clickability.SMTK.myInterval); 			calcDistance(Clickability.SMTK.firstX,Clickability.SMTK.firstY,newX,newY);	 		} 	}   	function calcDistance(aX,aY,bX,bY){ 		Clickability.SMTK.mT = Math.round(Math.sqrt(Math.pow(aX-bX,2)+Math.pow(aY-bY,2))); 	} 	 	function getFieldsForForm(){ 		var sT = new Date(); 		Clickability.SMTK.d = sT - Clickability.SMTK.aT; 		var queryString = "&"; 		queryString += "mT=" + Clickability.SMTK.mT;      	queryString += "&d=" + Clickability.SMTK.d;      	queryString += "&kP=" + Clickability.SMTK.kP;      	if(Clickability.SMTK.cid)queryString += "&cid=" + Clickability.SMTK.cid;      	if(Clickability.SMTK.did)queryString += "&did=" + Clickability.SMTK.did;      	queryString += "&socialMedia=Y"; 	    return queryString; 	} 		 	function addFieldsToForm(formObj, redirect) { 		var sT = new Date(); 		Clickability.SMTK.d = sT - Clickability.SMTK.aT; 		var mTField = document.createElement('input'); 		var dField = document.createElement('input'); 		var kPField = document.createElement('input');   		var cidField = document.createElement('input');   		var didField = document.createElement('input');   		var socialMedia = document.createElement('input');   	   	   		socialMedia.setAttribute('name','socialMedia'); 		socialMedia.setAttribute('type', 'hidden'); 		   		mTField.setAttribute('name','mT'); 		mTField.setAttribute('type', 'hidden');   	   		dField.setAttribute('name', 'd'); 		dField.setAttribute('type', 'hidden');   	   		kPField.setAttribute('name', 'kP'); 		kPField.setAttribute('type', 'hidden');   	 		cidField.setAttribute('name', 'cid'); 		cidField.setAttribute('type', 'hidden');   	   		didField.setAttribute('name', 'did');   		didField.setAttribute('type', 'hidden');	   	   		if(redirect != null) {   			var pathField = document.createElement('input');   			pathField.setAttribute('name', 'path');   			pathField.setAttribute('type', 'hidden');   			pathField.value = redirect;   			formObj.appendChild(pathField);   		}   		mTField.value = Clickability.SMTK.mT; 		dField.value = Clickability.SMTK.d; 		kPField.value = Clickability.SMTK.kP; 		cidField.value = Clickability.SMTK.cid; 		didField.value = Clickability.SMTK.did; 		socialMedia.value = "Y";  		formObj.appendChild(dField); 		formObj.appendChild(kPField); 		formObj.appendChild(mTField); 		formObj.appendChild(cidField); 		formObj.appendChild(didField); 		formObj.appendChild(socialMedia); 	}		 	 	//helper functions 	 	function insertComment(form, isAjax, returnFunction, showError){ 		return submitToServer(Comment.insertComment, "Unable to insert comment", form, isAjax, returnFunction, showError); 	} 	 	function updateComment(form, isAjax, returnFunction, showError){ 		return submitToServer(Comment.updateComment, "Unable to update comment", form, isAjax, returnFunction, showError); 	} 	 	function deleteComment(form, isAjax, returnFunction, showError){ 		return submitToServer(Comment.deleteComment, "Unable to delete comment", form, isAjax, returnFunction, showError); 	} 	 	function createUser(form, isAjax, returnFunction, showError){ 		return submitToServer(User.createUser, "Unable to create user", form, isAjax, returnFunction, showError); 	} 	 	function updateUser(form, isAjax, returnFunction, showError){ 		return submitToServer(User.updateUser, "Unable to update user", form, isAjax, returnFunction, showError); 	} 	 	function loginUser(form, isAjax, returnFunction, showError){ 		return submitToServer(User.loginUser, "Unable to login user", form, isAjax, returnFunction, showError); 	} 	 	function insertUserContent(form, isAjax, returnFunction, showError){ 		return submitToServer(UserContent.insertContent, "Unable to insert content item", form, isAjax, returnFunction, showError); 	} 	 	function editUserContent(form, isAjax, returnFunction, showError){ 		return submitToServer(UserContent.editContent, "Unable to edit content item", form, isAjax, returnFunction, showError); 	} 	 	function insertProfilePic(form, isAjax, returnFunction, showError){ 		return submitToServer(User.insertProfilePic, "Unable to upload profile photo", form, isAjax, returnFunction, showError); 	} 	 	function addRating(form, isAjax, returnFunction, showError){ 		return submitToServer(Rating.addRating, "Unable to add rating", form, isAjax, returnFunction, showError); 	} 	 	function insertRating(form, isAjax, returnFunction, showError){ 		return submitToServer(Rating.insertRating, "Unable to insert rating", form, isAjax, returnFunction, showError); 	} 	 	function attachAction(form, isAjax, returnFunction, showError){ 		return submitToServer(Action.attachAction, "Unable to attach action", form, isAjax, returnFunction, showError); 	} 	 	function deleteAction(form, isAjax, returnFunction, showError){ 		return submitToServer(Action.deleteAction, "Unable to delete action", form, isAjax, returnFunction, showError); 	} 	 	function insertRanking(form, isAjax, returnFunction, showError){ 		return submitToServer(Ranking.insertRanking, "Unable to insert ranking", form, isAjax, returnFunction, showError); 	} 	 	function submitToServer(method, msg, form, isAjax, returnFunction, showError){ 		method(form, isAjax, returnFunction); 	 		if(isAjax){ 			return false; 		} else { 			return true; 		} 	} </p>
<p> var _gaq = _gaq || [];   _gaq.push(['_setAccount', 'UA-3637494-2']);   _gaq.push(['_trackPageview']);   (function() {     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);   })(); </p>
<p> KAKE Home </p>
<p> Station Info </p>
<p> Find IT </p>
<p> Fair </p>
<p> Temp: 19.0 F (-7.2 C) </p>
<p> Wind Chill: 3 F (-16 C) </p>
<p> More Weather </p>
<p> Wichita Mid-Continent Airport, KS </p>
<p> Weather </p>
<p> KAKEland WeatherNOW </p>
<p> KAKEtrack LIVE </p>
<p> South Central </p>
<p> Southwest </p>
<p> Northwest </p>
<p> North Central </p>
<p> Weather Pics </p>
<p> KAKE StormCall </p>
<p> Weather Radio </p>
<p> Interactive Radar </p>
<p> News </p>
<p> Kansas </p>
<p> National </p>
<p> Crime </p>
<p> Agriculture </p>
<p> Aviation </p>
<p> This Week In Kansas </p>
<p> Submit a News Tip </p>
<p> Sports </p>
<p> Cotton Bowl Coverage </p>
<p> High School </p>
<p> College </p>
<p> National </p>
<p> Scores </p>
<p> OTL </p>
<p> Sports Tips </p>
<p> Student Athlete of The Week </p>
<p> KAKEland Votes </p>
<p> Local </p>
<p> State </p>
<p> Federal </p>
<p> Voter Info </p>
<p> TV </p>
<p> TV Schedule </p>
<p> Inside KAKE </p>
<p> Blogs </p>
<p> You C@st </p>
<p> Take 5 and Get 10 </p>
<p> Ads Seen On KAKE.com </p>
<p> Food </p>
<p> Recipes </p>
<p> School Lunch </p>
<p> Rachael Ray </p>
<p> Chef Walker </p>
<p> Mr. Food </p>
<p> Schools </p>
<p> EMC Reading Caravan </p>
<p> Closings </p>
<p> Golden Apple </p>
<p> School Lunch </p>
<p> Entertainment </p>
<p> The Buzz </p>
<p> Lottery </p>
<p> TV Schedule </p>
<p> Horoscope </p>
<p> Offbeat News </p>
<p> Access Hollywood </p>
<p> Anderson </p>
<p> Contests </p>
<p> Your Money </p>
<p> Cost Cutters </p>
<p> Money Matters </p>
<p> Automotive </p>
<p> Health </p>
<p> Health Connect </p>
<p> Baby Your Baby </p>
<p> Health Info TV </p>
<p> What's Going Around? </p>
<p> Dr. Oz </p>
<p> GO Green </p>
<p> A Greener KAKEland </p>
<p> KAKE Cares </p>
<p> Calendar </p>
<p> Military News </p>
<p> Crimestoppers </p>
<p> Susan's Kids </p>
<p> Special Reports </p>
<p> Made In KAKEland </p>
<p> Warm Hearts </p>
<p> Law </p>
<p> Lawyer On The Line </p>
<p> Law Connect </p>
<p> MomsEveryday </p>
<p> function ChangeSize(Size) { 		document.getElementById("storyText").style.fontSize = Size; 	} 	function ChangeWeight(Weight) { 		document.getElementById("storyText").style.fontWeight = Weight; 	} </p>
<p> var trkcid=137437868;var partnerID=21357; var _hb=1; </p>
<p> Back to News </p>
<p> var addthis_config = {"data_track_clickback":true}; addthis_options='favorites,email,digg,fark,google,live,myspace,twitter,facebook,delicious'; </p>
<p> H1N1 Case Reported In Wichita </p>
<p> Wesley Medical Center officials said the hospital treated its first influenza A, or H1N1, patient over the weekend. </p>
<p> Reporter: </p>
<p> KAKE News </p>
<p> Email Address: </p>
<p> news@kake.com </p>
<p> Story </p>
<p> 9 Comments </p>
<p> function confirmAbuse(name,id) { 	if(name == "") { var name = "Anonymous"; } 	if(confirm("Report comment by " + name + " as abusive?")) { 		document.getElementById(id).submit() 	} } </p>
<p> if (self['plpm'] && plpm['Top_Story_Ad']) document.write('<div style=\'text-align:center\'>');if (self['plpm'] && plpm['Top_Story_Ad']){ document.write(plpm['Top_Story_Ad']);} else if (self['plunpla'] && plunpla['5912']){document.write('<scr'+'ipt language="Javascript" type="text/javascript" src="http://cas.clickability.com/cas/cas.js?r='+Math.random()+'&p=5912&c=6500&m=22&d=21357&a='+plunpla['5912']+'&pre=%3Cdiv+style%3D%27text-align%3Acenter%27%3E&post=%3C%2Fdiv%3E"></scr'+'ipt>'); } else {  if(self['plurp'] && plurp['5912']){} else {document.write('<scr'+'ipt language="Javascript" type="text/javascript" src="http://cas.clickability.com/cas/cas.js?r='+Math.random()+'&p=5912&c=6500&m=22&d=21357&pre=%3Cdiv+style%3D%27text-align%3Acenter%27%3E&post=%3C%2Fdiv%3E"></scr'+'ipt>'); } }if (self['plpm'] && plpm['Top_Story_Ad']) document.write('</div>'); </p>
<p> Font Size: </p>
<p> Monday, January 16, 2012 </p>
<p> The first H1N1 flu case of the season has been reported at a Wichita hospital. </p>
<p> Wesley Medical Center officials said the hospital treated its first influenza A, or H1N1, patient over the weekend. </p>
<p> Symptoms include body aches, chills, dizziness, headache, nausea and vomiting. Others may also include dry cough, runny nose and a sore throat. Symptoms can last for up to seven days. </p>
<p> The flu is an airborne virus, easily spread through the nose, throat and lungs. </p>
<p> Doctors recommend a flu shot to prevent catching the virus. Hand washing, covering coughs and avoiding contact with your eyes, nose and mouth is also recommended. </p>
<p> Click here to post or read all 9 comments. </p>
<p> More Stories </p>
<p> Manhunt Locks Down Northwest Wichita Neighborhood </p>
<p> Neighborhood Concerned About Well Water Contamination </p>
<p> Monday Marks 47th Anniversary Of KC-135 Crash </p>
<p> Local Group Calling For Resignation Of Kansas House Speaker </p>
<p> Kansas SRS To Take Applications For Heating Aid </p>
<p> Kansas Democrats Seeking Pay Boost For State Workers </p>
<p> Flights From Garden City To Dallas Start In April </p>
<p> Recall: Kids' Luggage </p>
<p> Twitter News Feed </p>
<p> Offbeat News Headlines </p>
<p> Steve Jobs Action Figure Pulled From Market </p>
<p> 0 Comments </p>
<p> In Icons had planned to offer the 1-foot-tall, lifelike figure dressed in Jobs' trademark black mock turtleneck, rimless glasses and jeans. </p>
<p> (Full Story) </p>
<p> NY Hospital Mistakenly Bills Patients For Millions </p>
<p> 0 Comments </p>
<p> Patients at a New York City hospital are getting billed for tens of millions of dollars because of a computer error. </p>
<p> (Full Story) </p>
<p> Air Jordan Shoe Collection Heisted from NC Home </p>
<p> 0 Comments </p>
<p> A Charlotte, N.C., man says 30 pairs of Nike Air Jordan sneakers still in their boxes that he's been collecting since middle school have been heisted. </p>
<p> (Full Story) </p>
<p> Utah Man Gets Lost Class Ring Back 45 Years Later </p>
<p> 0 Comments </p>
<p> A Utah man who lost his class ring six months after he bought it is getting the keepsake back 45 years later. </p>
<p> (Full Story) </p>
<p> Police Ticket Boy After Toy Motorcycle Hits SUV </p>
<p> 3  Comments </p>
<p> Police in the Mexican border city of Ciudad Juarez ticketed a 6-year-old boy for reckless driving, driving without a license and not having his toy motorcycle registered after he crashed it into an SUV. </p>
<p> (Full Story) </p>
<p> Checking Email After Hours? It's Overtime </p>
<p> 1  Comment </p>
<p> Brazilian workers who find themselves answering work emails on their smartphones after the end of their shifts can qualify for overtime under a new law. </p>
<p> (Full Story) </p>
<p> More Headlines </p>
<p> Extras </p>
<p> Winter Guide </p>
<p> Cool ideas to keep you warm this winter! </p>
<p> Warm Hearts </p>
<p> Donate gently used winter clothing for families in need. </p>
<p> Health Connect </p>
<p> Click here for health resources from local medical providers. </p>
<p> KAKE DVD Collection </p>
<p> Click here to order KAKE DVD's including "Honor Flight", "Santa's Workshop" and more. </p>
<p> First United Methodist Church </p>
<p> Click here to watch live Sunday services. </p>
<p> Papa John's Pro Football Pick'em </p>
<p> CLICK HERE to play KAKEland's Pro Football Online game. </p>
<p> Home </p>
<p> News </p>
<p> Weather </p>
<p> Sports </p>
<p> KAKEland Votes </p>
<p> TV </p>
<p> Food </p>
<p> Schools </p>
<p> Entertainment </p>
<p> Your Money </p>
<p> Health </p>
<p> Go Green </p>
<p> KAKE Cares </p>
<p> MomsEveryday </p>
<p> Terms of Use </p>
<p> PRIVACY POLICY/YOUR CALIFORNIA PRIVACY RIGHTS </p>
<p> Advertising Non-Discrimination Certification </p>
<p> EEO Statement </p>
<p> Mobile Site </p>
<p> Gray Television, Inc. - Copyright © 2002-2012 - Designed by Gray Interactive Media - Powered by Clickability  - </p>
<p> Story ID: 137437868 </p>
<p> _qoptions={ qacct:"p-423IyeSlam-w-" }; </p>
<p> var _comscore = _comscore || []; _comscore.push({ c1: "2", c2: "6036361" }); (function() { var s = document.createElement("script"), el = document.getElementsByTagName("script")[0]; s.async = true; s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js"; el.parentNode.insertBefore(s, el); })(); </p>
